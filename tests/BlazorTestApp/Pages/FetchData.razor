@page "/fetchdata"
@inject HttpClient Http
@inherits StateComponent

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (state == null || !state.Initialized)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in state.Value)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <button onclick=@AddNew>Add new</button>
    <ForecastCounter />
}

@code {
    State<List<WeatherForecast>>? state;

    protected override async Task OnInitializedAsync()
    {
        state = await GetStateOf<List<WeatherForecast>>();
        // state = await GetState<WeatherForecastState>();
        await base.OnInitializedAsync();
    }

    void AddNew()
    {
        if (state != null)
        {
            var n = state.Value.First();
            n.Summary = "Test";
            n.Date = n.Date.AddDays(1);
            state.Value.Add(n);
            state.StateChanged();
        }
    }
}
